NEW_DIR				= mkdir -p
DEL_DIR				= rm -rf

CC					= c++
VALGRIND			= valgrind
COMPILE_FLAG		= $(DEPS_FLAG) -std=c++98 -Wall -Werror -Wextra -g
DEPS_FLAG			= -MMD -MP
INCLUDES_FLAG		= $(addprefix -I,	$(INCLUDES_DIR) \
										$(CLASS_DIR) \
										$(DEFINES_DIR) \
										$(FUNCTIONS_DIR) \
										$(TEMPLATES_DIR) \
										$(FNX_HEADER_DIR))
VALGRIND_FLAG		= --leak-check=full --show-leak-kinds=all --track-fds=yes
MAKE_OTHER_DIR		= make -C

OBJS_DIR			= objs/
SRCS_DIR			= srcs/
FNX_DIR				= fnx_cpp/
INCLUDES_DIR		= includes/
CLASS_DIR			= $(INCLUDES_DIR)class/
DEFINES_DIR			= $(INCLUDES_DIR)defines/
FUNCTIONS_DIR		= $(INCLUDES_DIR)functions/
TEMPLATES_DIR		= $(INCLUDES_DIR)templates/
FNX_HEADER_DIR		= $(FNX_DIR)$(INCLUDES_DIR)

VPATH				= $(SRCS_DIR)


DEFAULT_FILES		= operator structor member accessor
SRCS				= $(addsuffix .cpp,		main)
OBJS				= $(patsubst %.cpp, $(OBJS_DIR)%.o, $(SRCS))
DEPS				= $(OBJS:.o=.d)

EXE					= exe
FNX_LIB				= fnxlib.a

all					: $(FNX_LIB) $(EXE)

$(FNX_LIB)			:
					$(MAKE_OTHER_DIR) $(FNX_DIR)

$(EXE)				: $(OBJS)
					$(CC) $(COMPILE_FLAG) $^ $(FNX_DIR)$(FNX_LIB) -o $@

$(OBJS_DIR)%.o		: %.cpp
					$(NEW_DIR) $(OBJS_DIR)
					$(CC) $(COMPILE_FLAG) -c $< $(INCLUDES_FLAG) -o $@

clean				:
					$(DEL_DIR) $(OBJS_DIR)

fclean				: clean
					$(DEL_DIR) $(EXE)

re					:
					make fclean
					make all

valgrind			: all
					$(VALGRIND) $(VALGRIND_FLAG) ./$(EXE) $(ARG)

-include			$(DEPS)

.PHONY				: all clean fclean re valgrind
